{"version":3,"sources":["/Users/macbookair/Documents/andres/frontend/src/app/pages/login/login.component.html","/Users/macbookair/Documents/andres/frontend/src/app/pages/login/login.component.scss","/Users/macbookair/Documents/andres/frontend/src/app/pages/login/login.component.ts","/Users/macbookair/Documents/andres/frontend/src/app/pages/login/login.module.ts","/Users/macbookair/Documents/andres/frontend/node_modules/angular-particle/index.js"],"names":[],"mappings":"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;ACrM0C;AACF;AACM;AACA;AACI;AACe;AACf;AAC5C,IAAM,MAAM,GAAG;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,wEAAc,EAAE,SAAS,EAAE,MAAM,EAAE;CAC3D,CAAC;AAcF,IAAa,WAAW;IAAxB;IAA2B,CAAC;IAAD,kBAAC;AAAD,CAAC;AAAf,WAAW;IAZvB,+DAAQ,CAAC;QACR,OAAO,EAAE;YACP,6DAAY;YACZ,2DAAW;YACX,mEAAmB;YACnB,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,yEAAe;YACf,iEAAU;SACX;QACD,YAAY,EAAE,CAAC,wEAAc,CAAC;KAC/B,CAAC;GAEW,WAAW,CAAI;AAAJ;;;;;;;;;;;;;;ACxBkD;AACnD;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,eAAe,6DAAc;AAC7B,gBAAgB,6DAAc;AAC9B,gBAAgB,6DAAc;AAC9B,eAAe,6DAAc;AAC7B;;AAEA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,KAAK;AACL,mBAAmB,EAAE,0BAA0B,EAAE,UAAU,EAAE,UAAU,EAAE;AACzE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE,yBAAyB,IAAI;AAClD,mBAAmB,EAAE;AACrB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,EAAE;AACrB,6BAA6B;AAC7B,KAAK;AACL,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,EAAE,UAAU,yCAAyC;AACjF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE,cAAc,0CAA0C;AAC9F,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,EAAE,UAAU,QAAQ;AAChD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE,eAAe;AAC5C,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,4BAA4B,EAAE,UAAU,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,iDAAiD;AACjD,KAAK,mEAAoB;AACzB,EAAE;AACF;AACA,gBAAgB,6DAAc;AAC9B,qBAAqB,sGAAuD;AAC5E,sBAAsB,2FAA4C;AAClE,iBAAiB,sFAAuC;AACxD;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,8CAA8C,WAAW;;AAEjD","file":"login.module.chunk.js","sourcesContent":["module.exports = \"<particles [params]=\\\"myParams\\\" [style]=\\\"myStyle\\\" [width]=\\\"width\\\" [height]=\\\"height\\\"></particles>\\n<div class=\\\"login-container\\\">\\n    <div class=\\\"col-xl-4 col-md-6 col-10 offset-xl-4 offset-md-3 offset-1\\\">\\n        <div class=\\\"card\\\">\\n            <div *ngIf=\\\"invalid\\\" class=\\\"alert alert-danger\\\">\\n                <strong>Credenciales Invalidos</strong>  por favor revise los campos\\n            </div>\\n            <div class=\\\"card-block text-center\\\">\\n                 <img src=\\\"assets/img/logo/masautos.jpg\\\" alt=\\\"\\\" class=\\\"hidden-sm-down\\\"> \\n\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\" text-left\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"email\\\" class=\\\"form-control checking-field\\\" placeholder=\\\"Email\\\" type=\\\"text\\\">                      \\n                        <span class=\\\"help-block text-danger\\\" *ngIf=\\\"form.get('email').touched && form.get('email').hasError('required')\\\">Email es Necesario</span>                              \\n                        <span class=\\\"help-block text-danger\\\" *ngIf=\\\"form.get('email').touched && form.get('email').hasError('invalidEmail')\\\">Email Invalido</span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"password\\\" class=\\\"form-control checking-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\n                        <span class=\\\"help-block text-danger\\\" *ngIf=\\\"form.get('password').touched && form.get('password').hasError('required')\\\">Contrasena es Necesaria</span>                              \\n                        <span class=\\\"help-block text-danger\\\" *ngIf=\\\"form.get('password').touched && form.get('password').hasError('minlength')\\\">Minimo 6 Caracteres</span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input class=\\\"custom-control-input checkbox-main\\\" type=\\\"checkbox\\\">\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\n                            <span class=\\\"custom-control-description align-middle\\\">Mantenme conectado.</span>\\n                        </label>\\n                                            \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-main btn-block\\\" type=\\\"submit\\\">Entrar</button>\\n                    </div>\\n                </form>\\n\\n               \\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/macbookair/Documents/andres/frontend/src/app/pages/login/login.component.html\n// module id = ../../../../../src/app/pages/login/login.component.html\n// module chunks = login.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**** Colors (recommended use HEX colors) ****/\\n/**** App roots ****/\\n/**** General ****/\\n/**** Navbar ****/\\n/**** Sidebar ****/\\n/**** Progress ****/\\n/**** Fonts ****/\\n/**** Social icons ****/\\nbody::after {\\n  content: '{\\\"main-color\\\":\\\"#2E0502\\\",\\\"default-color\\\":\\\"#fff\\\",\\\"dark-color\\\":\\\"#000\\\",\\\"primary-color\\\":\\\"#024a88\\\",\\\"success-color\\\":\\\"#2d922d\\\",\\\"warning-color\\\":\\\"#f79a17\\\",\\\"danger-color\\\":\\\"#bf1725\\\",\\\"info-color\\\":\\\"#248dad\\\",\\\"sidebar-bg-color\\\":\\\"#640D05\\\",\\\"gray\\\":\\\"#555\\\",\\\"gray-light\\\":\\\"#ccc\\\"}';\\n  display: none; }\\n\\n.login-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  height: 100%;\\n  width: 100%;\\n  position: absolute; }\\n  .login-container .card {\\n    padding: 15px; }\\n    .login-container .card img {\\n      height: 100px;\\n      width: 200px;\\n      border-radius: 50px;\\n      margin-bottom: 30px; }\\n    .login-container .card .btn-link {\\n      padding: 0; }\\n      .login-container .card .btn-link.forgot {\\n        font-size: 14px; }\\n      .login-container .card .btn-link:hover {\\n        color: #2E0502; }\\n\\n.auth-sep {\\n  margin-top: 32px;\\n  margin-bottom: 24px;\\n  line-height: 20px;\\n  font-size: 15px;\\n  text-align: center;\\n  display: block;\\n  position: relative; }\\n  .auth-sep > span {\\n    display: table-cell;\\n    width: 30%;\\n    white-space: nowrap;\\n    padding: 0 14px;\\n    color: #555; }\\n    .auth-sep > span > span {\\n      margin-top: -11px;\\n      display: block;\\n      font-weight: 300; }\\n  .auth-sep:before, .auth-sep:after {\\n    border-top: solid 1px #ccc;\\n    content: \\\"\\\";\\n    height: 1px;\\n    width: 35%;\\n    display: table-cell; }\\n\\n.login-help {\\n  margin: 0;\\n  padding: 0; }\\n  .login-help li {\\n    list-style: none;\\n    display: inline-block;\\n    margin-left: 10px; }\\n    .login-help li:first-child {\\n      margin-left: 0; }\\n    .login-help li i {\\n      cursor: pointer;\\n      transition: all 0.1s ease;\\n      color: #fff;\\n      padding: 9px 9px 6px 9px;\\n      font-size: 12px;\\n      background-color: #2E0502; }\\n      .login-help li i.socicon-facebook {\\n        background-color: #3b5998; }\\n      .login-help li i.socicon-twitter {\\n        background-color: #55acee; }\\n      .login-help li i.socicon-google {\\n        background-color: #dd4b39; }\\n      .login-help li i:hover {\\n        opacity: 0.9; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/macbookair/Documents/andres/frontend/src/app/pages/login/login.component.scss\n// module id = ../../../../../src/app/pages/login/login.component.scss\n// module chunks = login.module","import { UserService } from './../../services/user.service';\nimport { ToasterService } from 'angular2-toaster';\nimport { EndPointService } from './../../services/endpoint.service';\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators} from '@angular/forms';\nimport {Http, Headers, URLSearchParams} from '@angular/http';\n\n\n@Component({\n  selector: 'az-login',\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  providers:[EndPointService,UserService],\n\n})\nexport class LoginComponent {  \n    public router: Router;\n    public form:FormGroup;\n    public email:AbstractControl;\n    public invalid:boolean = false;\n    public password:AbstractControl;\n    private toasterService: ToasterService;\n\n        myStyle: object = {};\n        myParams: object = {};\n        width: number = 100;\n        height: number = 100;\n\n    constructor(router:Router, fb:FormBuilder,public ep:EndPointService,public user:UserService) {\n        this.router = router;\n        this.form = fb.group({\n            'email': ['', Validators.compose([Validators.required, emailValidator])],\n            'password': ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n        });\n\n        this.email = this.form.controls['email'];\n        this.password = this.form.controls['password'];\n    }\n        ngOnInit() {\n            this.myStyle = {\n                'position': 'fixed',\n                'background-color':'#420303',\n                'width': '100%',\n                'height': '100%',\n                'z-index': -1,\n                'top': 0,\n                'left': 0,\n                'right': 0,\n                'bottom': 0,\n            };\n     \n        this.myParams = {\n                  \"particles\": {\n                    \"number\": {\n                      \"value\": 80,\n                      \"density\": {\n                        \"enable\": true,\n                        \"value_area\": 8000\n                      }\n                    },\n                    \"color\": {\n                      \"value\": \"#ffffff\"\n                    },\n                    \"shape\": {\n                      \"type\": \"circle\",\n                      \"stroke\": {\n                        \"width\": 0,\n                        \"color\": \"#000000\"\n                      },\n                      \"polygon\": {\n                        \"nb_sides\": 5\n                      },\n                      \"image\": {\n                        \"src\": \"img/github.svg\",\n                        \"width\": 100,\n                        \"height\": 100\n                      }\n                    },\n                    \"opacity\": {\n                      \"value\": 0.5,\n                      \"random\": false,\n                      \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 1,\n                        \"opacity_min\": 0.1,\n                        \"sync\": false\n                      }\n                    },\n                    \"size\": {\n                      \"value\": 10,\n                      \"random\": true,\n                      \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 80,\n                        \"size_min\": 0.1,\n                        \"sync\": false\n                      }\n                    },\n                    \"line_linked\": {\n                      \"enable\": true,\n                      \"distance\": 300,\n                      \"color\": \"#ffffff\",\n                      \"opacity\": 0.4,\n                      \"width\": 2\n                    },\n                    \"move\": {\n                      \"enable\": true,\n                      \"speed\": 12,\n                      \"direction\": \"none\",\n                      \"random\": false,\n                      \"straight\": false,\n                      \"out_mode\": \"out\",\n                      \"bounce\": false,\n                      \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 1200\n                      }\n                    }\n                  },\n                  \"interactivity\": {\n                    \"detect_on\": \"canvas\",\n                    \"events\": {\n                      \"onhover\": {\n                        \"enable\": false,\n                        \"mode\": \"repulse\"\n                      },\n                      \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"push\"\n                      },\n                      \"resize\": true\n                    },\n                    \"modes\": {\n                      \"grab\": {\n                        \"distance\": 800,\n                        \"line_linked\": {\n                          \"opacity\": 1\n                        }\n                      },\n                      \"bubble\": {\n                        \"distance\": 800,\n                        \"size\": 80,\n                        \"duration\": 2,\n                        \"opacity\": 0.8,\n                        \"speed\": 3\n                      },\n                      \"repulse\": {\n                        \"distance\": 400,\n                        \"duration\": 0.4\n                      },\n                      \"push\": {\n                        \"particles_nb\": 4\n                      },\n                      \"remove\": {\n                        \"particles_nb\": 2\n                      }\n                    }\n                  },\n                  \"retina_detect\": true\n                }\n    }\n\n    public onSubmit(values:Object):void {\n        if (this.form.valid) {\n            console.log(values);\n            this.ep.loginRequest(values).then((response=>{\n                  if(response.status ==401){\n                    this.invalid = true;\n\n                  }else{\n                    console.log(response);\n                    this.user.setToken(response.token);\n                    this.ep.getUserData().then((result=>{\n                      console.log(result);\n                      this.user.setUser(result.user);\n                     this.router.navigate(['pages/dashboard']);\n                      \n                    }))\n                    \n                   \n                  }\n                  \n            }));\n            \n            //this.router.navigate(['pages/dashboard']);\n        }\n    }\n\n}\n\nexport function emailValidator(control: FormControl): {[key: string]: any} {\n    var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;    \n    if (control.value && !emailRegexp.test(control.value)) {\n        return {invalidEmail: true};\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/macbookair/Documents/andres/frontend/src/app/pages/login/login.component.ts","import { UserService } from './../../services/user.service';\nimport { HttpModule } from '@angular/http';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ParticlesModule } from 'angular-particle';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login.component';\nexport const routes = [\n  { path: '', component: LoginComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    ParticlesModule,\n    HttpModule\n  ],\n  declarations: [LoginComponent]\n})\n\nexport class LoginModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/macbookair/Documents/andres/frontend/src/app/pages/login/login.module.ts","import { Component, Directive, ElementRef, HostListener, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar ParticlesComponent = (function () {\r\n    function ParticlesComponent() {\r\n        this.width = 100;\r\n        this.height = 100;\r\n        this.style = {};\r\n    }\r\n    return ParticlesComponent;\r\n}());\r\nParticlesComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'particles',\r\n                template: \"\\n        <div [ngStyle]=\\\"style\\\" class=\\\"particles-container\\\">\\n            <canvas d-particles [params]=\\\"params\\\" [style.width.%]=\\\"width\\\" [style.height.%]=\\\"height\\\"></canvas>\\n        </div>\\n    \"\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nParticlesComponent.ctorParameters = function () { return []; };\r\nParticlesComponent.propDecorators = {\r\n    'width': [{ type: Input },],\r\n    'height': [{ type: Input },],\r\n    'params': [{ type: Input },],\r\n    'style': [{ type: Input },],\r\n};\n\nvar hexToRgb = function (hex) {\r\n    var /** @type {?} */ shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n        return r + r + g + g + b + b;\r\n    });\r\n    var /** @type {?} */ result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : null;\r\n};\r\nvar clamp = function (number, min, max) {\r\n    return Math.min(Math.max(number, min), max);\r\n};\r\nvar isInArray = function (value, array) {\r\n    return array.indexOf(value) > -1;\r\n};\r\nvar deepExtend = function (destination, source) {\r\n    for (var /** @type {?} */ property in source) {\r\n        if (source[property] &&\r\n            source[property].constructor &&\r\n            source[property].constructor === Object) {\r\n            destination[property] = destination[property] || {};\r\n            deepExtend(destination[property], source[property]);\r\n        }\r\n        else {\r\n            destination[property] = source[property];\r\n        }\r\n    }\r\n    return destination;\r\n};\r\nvar getColor = function (colorObject) {\r\n    var /** @type {?} */ color = {};\r\n    if (typeof (colorObject) == 'object') {\r\n        if (colorObject instanceof Array) {\r\n            var /** @type {?} */ selectedColor = colorObject[Math.floor(Math.random() * colorObject.length)];\r\n            color.rgb = hexToRgb(selectedColor);\r\n        }\r\n        else {\r\n            var r = colorObject.r, g = colorObject.g, b = colorObject.b;\r\n            if (r !== undefined && g !== undefined && b !== undefined) {\r\n                color.rgb = { r: r, g: g, b: b };\r\n            }\r\n            else {\r\n                var h = colorObject.h, s = colorObject.s, l = colorObject.l;\r\n                if (h !== undefined && g !== undefined && b !== undefined) {\r\n                    color.hsl = { h: h, s: s, l: l };\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (colorObject == 'random') {\r\n        color.rgb = {\r\n            r: (Math.floor(Math.random() * 255) + 1),\r\n            g: (Math.floor(Math.random() * 255) + 1),\r\n            b: (Math.floor(Math.random() * 255) + 1)\r\n        };\r\n    }\r\n    else if (typeof (colorObject) == 'string') {\r\n        color.rgb = hexToRgb(colorObject);\r\n    }\r\n    return color;\r\n};\r\nvar getDefaultParams = function () {\r\n    return {\r\n        particles: {\r\n            number: {\r\n                value: 100,\r\n                density: {\r\n                    enable: true,\r\n                    value_area: 800\r\n                }\r\n            },\r\n            color: {\r\n                value: '#FFF'\r\n            },\r\n            shape: {\r\n                type: 'circle',\r\n                stroke: {\r\n                    width: 0,\r\n                    color: '#000000'\r\n                },\r\n                polygon: {\r\n                    nb_sides: 5\r\n                },\r\n                image: {\r\n                    src: '',\r\n                    width: 100,\r\n                    height: 100\r\n                }\r\n            },\r\n            opacity: {\r\n                value: 0.5,\r\n                random: false,\r\n                anim: {\r\n                    enable: true,\r\n                    speed: 1,\r\n                    opacity_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            size: {\r\n                value: 3,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 40,\r\n                    size_min: 0,\r\n                    sync: false\r\n                }\r\n            },\r\n            line_linked: {\r\n                enable: true,\r\n                distance: 150,\r\n                color: '#FFF',\r\n                opacity: 0.6,\r\n                width: 1,\r\n                shadow: {\r\n                    enable: false,\r\n                    blur: 5,\r\n                    color: 'lime'\r\n                }\r\n            },\r\n            move: {\r\n                enable: true,\r\n                speed: 3,\r\n                direction: 'none',\r\n                random: false,\r\n                straight: false,\r\n                out_mode: 'out',\r\n                bounce: true,\r\n                attract: {\r\n                    enable: false,\r\n                    rotateX: 3000,\r\n                    rotateY: 3000\r\n                }\r\n            },\r\n            array: []\r\n        },\r\n        interactivity: {\r\n            detect_on: 'canvas',\r\n            events: {\r\n                onhover: {\r\n                    enable: true,\r\n                    mode: 'grab'\r\n                },\r\n                onclick: {\r\n                    enable: true,\r\n                    mode: 'push'\r\n                },\r\n                resize: true\r\n            },\r\n            modes: {\r\n                grab: {\r\n                    distance: 200,\r\n                    line_linked: {\r\n                        opacity: 1\r\n                    }\r\n                },\r\n                bubble: {\r\n                    distance: 200,\r\n                    size: 80,\r\n                    duration: 0.4\r\n                },\r\n                repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4\r\n                },\r\n                push: {\r\n                    particles_nb: 4\r\n                },\r\n                remove: {\r\n                    particles_nb: 2\r\n                }\r\n            },\r\n            mouse: {}\r\n        },\r\n        retina_detect: true\r\n    };\r\n};\r\n/**\r\n * @param {?} params\r\n * @param {?} tmp\r\n * @return {?}\r\n */\r\nfunction loadImg(params, tmp) {\r\n    var particles = this.params.particles;\r\n    tmp.img_error = undefined;\r\n    if (particles.shape.type == 'image' && particles.shape.image.src != '') {\r\n        if (tmp.img_type == 'svg') {\r\n            var /** @type {?} */ xhr_1 = new XMLHttpRequest();\r\n            xhr_1.open('GET', particles.shape.image.src);\r\n            xhr_1.onreadystatechange = function (data) {\r\n                if (xhr_1.readyState == 4) {\r\n                    if (xhr_1.status == 200) {\r\n                        tmp.source_svg = data.currentTarget.response;\r\n                        if (tmp.source_svg == undefined) {\r\n                            var /** @type {?} */ check = void 0;\r\n                            tmp.checkAnimFrame = requestAnimationFrame(check);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tmp.img_error = true;\r\n                        throw \"Error : image not found\";\r\n                    }\r\n                }\r\n            };\r\n            xhr_1.send();\r\n        }\r\n        else {\r\n            var /** @type {?} */ img_1 = new Image();\r\n            img_1.addEventListener('load', function () {\r\n                tmp.img_obj = img_1;\r\n                cancelAnimationFrame(tmp.checkAnimFrame);\r\n            });\r\n            img_1.src = particles.shape.image.src;\r\n        }\r\n    }\r\n    else {\r\n        tmp.img_error = true;\r\n        throw \"Error : no image.src\";\r\n    }\r\n}\r\n/**\r\n * @param {?} particle\r\n * @param {?} tmp\r\n * @return {?}\r\n */\r\nfunction createSvgImg(particle, tmp) {\r\n    var /** @type {?} */ svgXml = tmp.source_svg;\r\n    var /** @type {?} */ rgbHex = /#([0-9A-F]{3,6})/gi;\r\n    var /** @type {?} */ coloredSvgXml = svgXml.replace(rgbHex, function (m, r, g, b) {\r\n        var /** @type {?} */ color_value;\r\n        if (particle.color.rgb) {\r\n            var _a = particle.color.rgb, r_1 = _a.r, g_1 = _a.g, b_1 = _a.b;\r\n            color_value = \"rgba( \" + r_1 + \", \" + g_1 + \", \" + b_1 + \", \" + particle.opacity + \" )\";\r\n        }\r\n        else {\r\n            var _b = particle.color.hsl, h = _b.h, s = _b.s, l = _b.l;\r\n            color_value = \"rgba( \" + h + \", \" + s + \", \" + l + \", \" + particle.opacity + \" )\";\r\n        }\r\n        return color_value;\r\n    });\r\n    var /** @type {?} */ svg = new Blob([coloredSvgXml], {\r\n        type: 'image/svg+xml;charset=utf-8'\r\n    });\r\n    var /** @type {?} */ DOMURL = window.URL || window;\r\n    var /** @type {?} */ url = DOMURL.createObjectURL(svg);\r\n    var /** @type {?} */ img = new Image();\r\n    img.addEventListener('load', function () {\r\n        particle.img.obj = img;\r\n        particle.img.loaded = true;\r\n        DOMURL.revokeObjectURL(url);\r\n        tmp.count_svg++;\r\n    });\r\n    img.src = url;\r\n}\n\nvar CanvasManager$$1 = (function () {\r\n    /**\r\n     * @param {?} _canvasParams\r\n     * @param {?} _params\r\n     * @param {?} _tmpParams\r\n     */\r\n    function CanvasManager$$1(_canvasParams, _params, _tmpParams) {\r\n        this._canvasParams = _canvasParams;\r\n        this._params = _params;\r\n        this._tmpParams = _tmpParams;\r\n        this._onWindowResize = this._onWindowResize.bind(this);\r\n        this._retinaInit();\r\n        this._canvasSize();\r\n        this.particlesManager = new ParticlesManager$$1(this._canvasParams, this._params, this._tmpParams);\r\n        this.particlesManager.particlesCreate();\r\n        this._densityAutoParticles();\r\n        var particles = this._params.particles;\r\n        particles.line_linked.color_rgb_line = hexToRgb(particles.line_linked.color);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype.draw = function () {\r\n        var particles = this._params.particles;\r\n        if (particles.shape.type == 'image') {\r\n            if (this._tmpParams.img_type == 'svg') {\r\n                if (this._tmpParams.count_svg >= particles.number.value) {\r\n                    this.particlesManager.particlesDraw();\r\n                    if (!particles.move.enable) {\r\n                        cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n                    }\r\n                    else {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n                else {\r\n                    if (!this._tmpParams.img_error) {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (this._tmpParams.img_obj != undefined) {\r\n                    this.particlesManager.particlesDraw();\r\n                    if (!particles.move.enable) {\r\n                        cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n                    }\r\n                    else {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n                else {\r\n                    if (!this._tmpParams.img_error) {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.particlesManager.particlesDraw();\r\n            if (!particles.move.enable) {\r\n                cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n            }\r\n            else {\r\n                this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._densityAutoParticles = function () {\r\n        var particles = this._params.particles;\r\n        if (particles.number.density.enable) {\r\n            var /** @type {?} */ area = this._canvasParams.el.width * this._canvasParams.el.height / 1000;\r\n            if (this._tmpParams.retina) {\r\n                area = area / (this._canvasParams.pxratio * 2);\r\n            }\r\n            var /** @type {?} */ nb_particles = area * particles.number.value / particles.number.density.value_area;\r\n            var /** @type {?} */ missing_particles = particles.array.length - nb_particles;\r\n            if (missing_particles < 0) {\r\n                this.particlesManager.pushParticles(Math.abs(missing_particles));\r\n            }\r\n            else {\r\n                this.particlesManager.removeParticles(missing_particles);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._retinaInit = function () {\r\n        if (this._params.retina_detect && window.devicePixelRatio > 1) {\r\n            this._canvasParams.pxratio = window.devicePixelRatio;\r\n            this._tmpParams.retina = true;\r\n            this._canvasParams.width = this._canvasParams.el.offsetWidth * this._canvasParams.pxratio;\r\n            this._canvasParams.height = this._canvasParams.el.offsetHeight * this._canvasParams.pxratio;\r\n            this._params.particles.size.value = this._tmpParams.obj.size_value * this._canvasParams.pxratio;\r\n            this._params.particles.size.anim.speed = this._tmpParams.obj.size_anim_speed * this._canvasParams.pxratio;\r\n            this._params.particles.move.speed = this._tmpParams.obj.move_speed * this._canvasParams.pxratio;\r\n            this._params.particles.line_linked.distance = this._tmpParams.obj.line_linked_distance * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.grab.distance = this._tmpParams.obj.mode_grab_distance * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.bubble.distance = this._tmpParams.obj.mode_bubble_distance * this._canvasParams.pxratio;\r\n            this._params.particles.line_linked.width = this._tmpParams.obj.line_linked_width * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.bubble.size = this._tmpParams.obj.mode_bubble_size * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.repulse.distance = this._tmpParams.obj.mode_repulse_distance * this._canvasParams.pxratio;\r\n        }\r\n        else {\r\n            this._canvasParams.pxratio = 1;\r\n            this._tmpParams.retina = false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._canvasClear = function () {\r\n        this._canvasParams.ctx.clearRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._canvasPaint = function () {\r\n        this._canvasParams.ctx.fillRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._canvasSize = function () {\r\n        this._canvasParams.el.width = this._canvasParams.width;\r\n        this._canvasParams.el.height = this._canvasParams.height;\r\n        if (this._params && this._params.interactivity.events.resize) {\r\n            window.addEventListener('resize', this._onWindowResize);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._onWindowResize = function () {\r\n        this._canvasParams.width = this._canvasParams.el.offsetWidth;\r\n        this._canvasParams.height = this._canvasParams.el.offsetHeight;\r\n        if (this._tmpParams.retina) {\r\n            this._canvasParams.width *= this._canvasParams.pxratio;\r\n            this._canvasParams.height *= this._canvasParams.pxratio;\r\n        }\r\n        this._canvasParams.el.width = this._canvasParams.width;\r\n        this._canvasParams.el.height = this._canvasParams.height;\r\n        if (!this._params.particles.move.enable) {\r\n            this.particlesManager.particlesEmpty();\r\n            this.particlesManager.particlesCreate();\r\n            this.particlesManager.particlesDraw();\r\n            this._densityAutoParticles();\r\n        }\r\n        this._densityAutoParticles();\r\n    };\r\n    return CanvasManager$$1;\r\n}());\n\nvar ParticlesManager$$1 = (function () {\r\n    /**\r\n     * @param {?} _canvasParams\r\n     * @param {?} _params\r\n     * @param {?} _tmpParams\r\n     */\r\n    function ParticlesManager$$1(_canvasParams, _params, _tmpParams) {\r\n        this._canvasParams = _canvasParams;\r\n        this._params = _params;\r\n        this._tmpParams = _tmpParams;\r\n        this._interaction = new ParticleInteraction();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.particlesCreate = function () {\r\n        var _a = this._params.particles, color = _a.color, opacity = _a.opacity;\r\n        for (var /** @type {?} */ i = 0; i < this._params.particles.number.value; i++) {\r\n            this._params.particles.array.push(new Particle$$1(this._canvasParams, this._params, this._tmpParams, color, opacity.value));\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._particlesUpdate = function () {\r\n        var _this = this;\r\n        this._params.particles.array.forEach(function (particle, i) {\r\n            if (_this._params.particles.move.enable) {\r\n                var /** @type {?} */ ms = _this._params.particles.move.speed / 2;\r\n                particle.x += particle.vx * ms;\r\n                particle.y += particle.vy * ms;\r\n            }\r\n            if (_this._params.particles.opacity.anim.enable) {\r\n                if (particle.opacity_status == true) {\r\n                    if (particle.opacity >= _this._params.particles.opacity.value)\r\n                        particle.opacity_status = false;\r\n                    particle.opacity += particle.vo;\r\n                }\r\n                else {\r\n                    if (particle.opacity <= _this._params.particles.opacity.anim.opacity_min)\r\n                        particle.opacity_status = true;\r\n                    particle.opacity -= particle.vo;\r\n                }\r\n                if (particle.opacity < 0)\r\n                    particle.opacity = 0;\r\n            }\r\n            if (_this._params.particles.size.anim.enable) {\r\n                if (particle.size_status == true) {\r\n                    if (particle.radius >= _this._params.particles.size.value)\r\n                        particle.size_status = false;\r\n                    particle.radius += particle.vs;\r\n                }\r\n                else {\r\n                    if (particle.radius <= _this._params.particles.size.anim.size_min)\r\n                        particle.size_status = true;\r\n                    particle.radius -= particle.vs;\r\n                }\r\n                if (particle.radius < 0)\r\n                    particle.radius = 0;\r\n            }\r\n            var /** @type {?} */ new_pos;\r\n            if (_this._params.particles.move.out_mode == 'bounce') {\r\n                new_pos = {\r\n                    x_left: particle.radius,\r\n                    x_right: _this._canvasParams.width,\r\n                    y_top: particle.radius,\r\n                    y_bottom: _this._canvasParams.height\r\n                };\r\n            }\r\n            else {\r\n                new_pos = {\r\n                    x_left: -particle.radius,\r\n                    x_right: _this._canvasParams.width + particle.radius,\r\n                    y_top: -particle.radius,\r\n                    y_bottom: _this._canvasParams.height + particle.radius\r\n                };\r\n            }\r\n            if (particle.x - particle.radius > _this._canvasParams.width) {\r\n                particle.x = new_pos.x_left;\r\n                particle.y = Math.random() * _this._canvasParams.height;\r\n            }\r\n            else if (particle.x + particle.radius < 0) {\r\n                particle.x = new_pos.x_right;\r\n                particle.y = Math.random() * _this._canvasParams.height;\r\n            }\r\n            if (particle.y - particle.radius > _this._canvasParams.height) {\r\n                particle.y = new_pos.y_top;\r\n                particle.x = Math.random() * _this._canvasParams.width;\r\n            }\r\n            else if (particle.y + particle.radius < 0) {\r\n                particle.y = new_pos.y_bottom;\r\n                particle.x = Math.random() * _this._canvasParams.width;\r\n            }\r\n            switch (_this._params.particles.move.out_mode) {\r\n                case 'bounce':\r\n                    if (particle.x + particle.radius > _this._canvasParams.width)\r\n                        particle.vx = -particle.vx;\r\n                    else if (particle.x - particle.radius < 0)\r\n                        particle.vx = -particle.vx;\r\n                    if (particle.y + particle.radius > _this._canvasParams.height)\r\n                        particle.vy = -particle.vy;\r\n                    else if (particle.y - particle.radius < 0)\r\n                        particle.vy = -particle.vy;\r\n                    break;\r\n            }\r\n            if (isInArray('grab', _this._params.interactivity.events.onhover.mode)) {\r\n                _this._grabParticle(particle);\r\n            }\r\n            if (isInArray('bubble', _this._params.interactivity.events.onhover.mode) ||\r\n                isInArray('bubble', _this._params.interactivity.events.onclick.mode)) {\r\n                _this._bubbleParticle(particle);\r\n            }\r\n            if (isInArray('repulse', _this._params.interactivity.events.onhover.mode) ||\r\n                isInArray('repulse', _this._params.interactivity.events.onclick.mode)) {\r\n                _this._repulseParticle(particle);\r\n            }\r\n            if (_this._params.particles.line_linked.enable || _this._params.particles.move.attract.enable) {\r\n                for (var /** @type {?} */ j = i + 1; j < _this._params.particles.array.length; j++) {\r\n                    var /** @type {?} */ link = _this._params.particles.array[j];\r\n                    if (_this._params.particles.line_linked.enable)\r\n                        _this._interaction.linkParticles(particle, link, _this._params, _this._canvasParams);\r\n                    if (_this._params.particles.move.attract.enable)\r\n                        _this._interaction.attractParticles(particle, link, _this._params);\r\n                    if (_this._params.particles.move.bounce)\r\n                        _this._interaction.bounceParticles(particle, link);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.particlesDraw = function () {\r\n        this._canvasParams.ctx.clearRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n        this._particlesUpdate();\r\n        this._params.particles.array.forEach(function (particle) {\r\n            particle.draw();\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.particlesEmpty = function () {\r\n        this._params.particles.array = [];\r\n    };\r\n    /**\r\n     * @param {?} nb\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.removeParticles = function (nb) {\r\n        this._params.particles.array.splice(0, nb);\r\n        if (!this._params.particles.move.enable) {\r\n            this.particlesDraw();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} nb\r\n     * @param {?=} pos\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.pushParticles = function (nb, pos) {\r\n        this._tmpParams.pushing = true;\r\n        for (var /** @type {?} */ i = 0; i < nb; i++) {\r\n            this._params.particles.array.push(new Particle$$1(this._canvasParams, this._params, this._tmpParams, this._params.particles.color, this._params.particles.opacity.value, {\r\n                x: pos ? pos.pos_x : Math.random() * this._canvasParams.width,\r\n                y: pos ? pos.pos_y : Math.random() * this._canvasParams.height\r\n            }));\r\n            if (i == nb - 1) {\r\n                if (!this._params.particles.move.enable) {\r\n                    this.particlesDraw();\r\n                }\r\n                this._tmpParams.pushing = false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} particle\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._bubbleParticle = function (particle) {\r\n        var _this = this;\r\n        if (this._params.interactivity.events.onhover.enable &&\r\n            isInArray('bubble', this._params.interactivity.events.onhover.mode)) {\r\n            var /** @type {?} */ dx_mouse = particle.x - this._params.interactivity.mouse.pos_x;\r\n            var /** @type {?} */ dy_mouse = particle.y - this._params.interactivity.mouse.pos_y;\r\n            var /** @type {?} */ dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n            var /** @type {?} */ ratio = 1 - dist_mouse / this._params.interactivity.modes.bubble.distance;\r\n            var /** @type {?} */ init = function () {\r\n                particle.opacity_bubble = particle.opacity;\r\n                particle.radius_bubble = particle.radius;\r\n            };\r\n            if (dist_mouse <= this._params.interactivity.modes.bubble.distance) {\r\n                if (ratio >= 0 && this._params.interactivity.status == 'mousemove') {\r\n                    if (this._params.interactivity.modes.bubble.size != this._params.particles.size.value) {\r\n                        if (this._params.interactivity.modes.bubble.size > this._params.particles.size.value) {\r\n                            var /** @type {?} */ size = particle.radius + (this._params.interactivity.modes.bubble.size * ratio);\r\n                            if (size >= 0) {\r\n                                particle.radius_bubble = size;\r\n                            }\r\n                        }\r\n                        else {\r\n                            var /** @type {?} */ dif = particle.radius - this._params.interactivity.modes.bubble.size;\r\n                            var /** @type {?} */ size = particle.radius - (dif * ratio);\r\n                            if (size > 0) {\r\n                                particle.radius_bubble = size;\r\n                            }\r\n                            else {\r\n                                particle.radius_bubble = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this._params.interactivity.modes.bubble.opacity != this._params.particles.opacity.value) {\r\n                        if (this._params.interactivity.modes.bubble.opacity > this._params.particles.opacity.value) {\r\n                            var /** @type {?} */ opacity = this._params.interactivity.modes.bubble.opacity * ratio;\r\n                            if (opacity > particle.opacity && opacity <= this._params.interactivity.modes.bubble.opacity) {\r\n                                particle.opacity_bubble = opacity;\r\n                            }\r\n                        }\r\n                        else {\r\n                            var /** @type {?} */ opacity = particle.opacity - (this._params.particles.opacity.value - this._params.interactivity.modes.bubble.opacity) * ratio;\r\n                            if (opacity < particle.opacity && opacity >= this._params.interactivity.modes.bubble.opacity) {\r\n                                particle.opacity_bubble = opacity;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                init();\r\n            }\r\n            if (this._params.interactivity.status == 'mouseleave') {\r\n                init();\r\n            }\r\n        }\r\n        else if (this._params.interactivity.events.onclick.enable &&\r\n            isInArray('bubble', this._params.interactivity.events.onclick.mode)) {\r\n            if (this._tmpParams.bubble_clicking) {\r\n                var /** @type {?} */ dx_mouse = particle.x - this._params.interactivity.mouse.click_pos_x;\r\n                var /** @type {?} */ dy_mouse = particle.y - this._params.interactivity.mouse.click_pos_y;\r\n                var /** @type {?} */ dist_mouse_1 = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n                var /** @type {?} */ time_spent_1 = (new Date().getTime() - this._params.interactivity.mouse.click_time) / 1000;\r\n                if (time_spent_1 > this._params.interactivity.modes.bubble.duration) {\r\n                    this._tmpParams.bubble_duration_end = true;\r\n                }\r\n                if (time_spent_1 > this._params.interactivity.modes.bubble.duration * 2) {\r\n                    this._tmpParams.bubble_clicking = false;\r\n                    this._tmpParams.bubble_duration_end = false;\r\n                }\r\n                var /** @type {?} */ process = function (bubble_param, particles_param, p_obj_bubble, p_obj, id) {\r\n                    if (bubble_param != particles_param) {\r\n                        if (!_this._tmpParams.bubble_duration_end) {\r\n                            if (dist_mouse_1 <= _this._params.interactivity.modes.bubble.distance) {\r\n                                var /** @type {?} */ obj = void 0;\r\n                                if (p_obj_bubble != undefined) {\r\n                                    obj = p_obj_bubble;\r\n                                }\r\n                                else {\r\n                                    obj = p_obj;\r\n                                }\r\n                                if (obj != bubble_param) {\r\n                                    var /** @type {?} */ value = p_obj - (time_spent_1 * (p_obj - bubble_param) / _this._params.interactivity.modes.bubble.duration);\r\n                                    if (id == 'size')\r\n                                        particle.radius_bubble = value;\r\n                                    if (id == 'opacity')\r\n                                        particle.opacity_bubble = value;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (id == 'size')\r\n                                    particle.radius_bubble = undefined;\r\n                                if (id == 'opacity')\r\n                                    particle.opacity_bubble = undefined;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (p_obj_bubble != undefined) {\r\n                                var /** @type {?} */ value_tmp = p_obj - (time_spent_1 * (p_obj - bubble_param) / _this._params.interactivity.modes.bubble.duration);\r\n                                var /** @type {?} */ dif = bubble_param - value_tmp;\r\n                                var /** @type {?} */ value = bubble_param + dif;\r\n                                if (id == 'size')\r\n                                    particle.radius_bubble = value;\r\n                                if (id == 'opacity')\r\n                                    particle.opacity_bubble = value;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                if (this._tmpParams.bubble_clicking) {\r\n                    process(this._params.interactivity.modes.bubble.size, this._params.particles.size.value, particle.radius_bubble, particle.radius, 'size');\r\n                    process(this._params.interactivity.modes.bubble.opacity, this._params.particles.opacity.value, particle.opacity_bubble, particle.opacity, 'opacity');\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} particle\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._repulseParticle = function (particle) {\r\n        var _this = this;\r\n        if (this._params.interactivity.events.onhover.enable &&\r\n            isInArray('repulse', this._params.interactivity.events.onhover.mode) &&\r\n            this._params.interactivity.status == 'mousemove') {\r\n            var /** @type {?} */ dx_mouse = particle.x - this._params.interactivity.mouse.pos_x;\r\n            var /** @type {?} */ dy_mouse = particle.y - this._params.interactivity.mouse.pos_y;\r\n            var /** @type {?} */ dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n            var /** @type {?} */ normVec = { x: dx_mouse / dist_mouse, y: dy_mouse / dist_mouse };\r\n            var /** @type {?} */ repulseRadius = this._params.interactivity.modes.repulse.distance;\r\n            var /** @type {?} */ velocity = 100;\r\n            var /** @type {?} */ repulseFactor = clamp((1 / repulseRadius) * (-1 * Math.pow(dist_mouse / repulseRadius, 2) + 1) * repulseRadius * velocity, 0, 50);\r\n            var /** @type {?} */ pos = {\r\n                x: particle.x + normVec.x * repulseFactor,\r\n                y: particle.y + normVec.y * repulseFactor\r\n            };\r\n            if (this._params.particles.move.out_mode == 'bounce') {\r\n                if (pos.x - particle.radius > 0 && pos.x + particle.radius < this._canvasParams.width)\r\n                    particle.x = pos.x;\r\n                if (pos.y - particle.radius > 0 && pos.y + particle.radius < this._canvasParams.height)\r\n                    particle.y = pos.y;\r\n            }\r\n            else {\r\n                particle.x = pos.x;\r\n                particle.y = pos.y;\r\n            }\r\n        }\r\n        else if (this._params.interactivity.events.onclick.enable &&\r\n            isInArray('repulse', this._params.interactivity.events.onclick.mode)) {\r\n            if (!this._tmpParams.repulse_finish) {\r\n                this._tmpParams.repulse_count++;\r\n                if (this._tmpParams.repulse_count == this._params.particles.array.length)\r\n                    this._tmpParams.repulse_finish = true;\r\n            }\r\n            if (this._tmpParams.repulse_clicking) {\r\n                var /** @type {?} */ repulseRadius = Math.pow(this._params.interactivity.modes.repulse.distance / 6, 3);\r\n                var /** @type {?} */ dx_1 = this._params.interactivity.mouse.click_pos_x - particle.x;\r\n                var /** @type {?} */ dy_1 = this._params.interactivity.mouse.click_pos_y - particle.y;\r\n                var /** @type {?} */ d = dx_1 * dx_1 + dy_1 * dy_1;\r\n                var /** @type {?} */ force_1 = -repulseRadius / d * 1;\r\n                var /** @type {?} */ process = function () {\r\n                    var /** @type {?} */ f = Math.atan2(dy_1, dx_1);\r\n                    particle.vx = force_1 * Math.cos(f);\r\n                    particle.vy = force_1 * Math.sin(f);\r\n                    if (_this._params.particles.move.out_mode == 'bounce') {\r\n                        var /** @type {?} */ pos = {\r\n                            x: particle.x + particle.vx,\r\n                            y: particle.y + particle.vy\r\n                        };\r\n                        if (pos.x + particle.radius > _this._canvasParams.width)\r\n                            particle.vx = -particle.vx;\r\n                        else if (pos.x - particle.radius < 0)\r\n                            particle.vx = -particle.vx;\r\n                        if (pos.y + particle.radius > _this._canvasParams.height)\r\n                            particle.vy = -particle.vy;\r\n                        else if (pos.y - particle.radius < 0)\r\n                            particle.vy = -particle.vy;\r\n                    }\r\n                };\r\n                if (d <= repulseRadius) {\r\n                    process();\r\n                }\r\n            }\r\n            else {\r\n                if (this._tmpParams.repulse_clicking == false) {\r\n                    particle.vx = particle.vx_i;\r\n                    particle.vy = particle.vy_i;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} particle\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._grabParticle = function (particle) {\r\n        var _a = this._params, interactivity = _a.interactivity, particles = _a.particles;\r\n        if (interactivity.events.onhover.enable &&\r\n            interactivity.status == 'mousemove') {\r\n            var /** @type {?} */ dx_mouse = particle.x - interactivity.mouse.pos_x;\r\n            var /** @type {?} */ dy_mouse = particle.y - interactivity.mouse.pos_y;\r\n            var /** @type {?} */ dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n            if (dist_mouse <= interactivity.modes.grab.distance) {\r\n                var grab = interactivity.modes.grab;\r\n                var /** @type {?} */ opacity_line = grab.line_linked.opacity - (dist_mouse / (1 / grab.line_linked.opacity)) / grab.distance;\r\n                if (opacity_line > 0) {\r\n                    var /** @type {?} */ color_line = particles.line_linked.color_rgb_line;\r\n                    var r = color_line.r, g = color_line.g, b = color_line.b;\r\n                    this._canvasParams.ctx.strokeStyle = \"rgba( \" + r + \", \" + g + \", \" + b + \", \" + opacity_line + \" )\";\r\n                    this._canvasParams.ctx.lineWidth = particles.line_linked.width;\r\n                    this._canvasParams.ctx.beginPath();\r\n                    this._canvasParams.ctx.moveTo(particle.x, particle.y);\r\n                    this._canvasParams.ctx.lineTo(interactivity.mouse.pos_x, interactivity.mouse.pos_y);\r\n                    this._canvasParams.ctx.stroke();\r\n                    this._canvasParams.ctx.closePath();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return ParticlesManager$$1;\r\n}());\n\nvar Particle$$1 = (function () {\r\n    /**\r\n     * @param {?} _canvasParams\r\n     * @param {?} _params\r\n     * @param {?} _tmpParams\r\n     * @param {?=} color\r\n     * @param {?=} opacity\r\n     * @param {?=} position\r\n     */\r\n    function Particle$$1(_canvasParams, _params, _tmpParams, color, opacity, position) {\r\n        this._canvasParams = _canvasParams;\r\n        this._params = _params;\r\n        this._tmpParams = _tmpParams;\r\n        this._setupSize();\r\n        this._setupPosition(position);\r\n        this._setupColor(color);\r\n        this._setupOpacity();\r\n        this._setupAnimation();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupSize = function () {\r\n        this.radius = (this._params.particles.size.random ? Math.random() : 1) * this._params.particles.size.value;\r\n        if (this._params.particles.size.anim.enable) {\r\n            this.size_status = false;\r\n            this.vs = this._params.particles.size.anim.speed / 100;\r\n            if (!this._params.particles.size.anim.sync)\r\n                this.vs = this.vs * Math.random();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?=} position\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupPosition = function (position) {\r\n        this.x = position ? position.x : Math.random() * this._canvasParams.width;\r\n        this.y = position ? position.y : Math.random() * this._canvasParams.height;\r\n        if (this.x > this._canvasParams.width - this.radius * 2) {\r\n            this.x = this.x - this.radius;\r\n        }\r\n        else if (this.x < this.radius * 2) {\r\n            this.x = this.x + this.radius;\r\n        }\r\n        if (this.y > this._canvasParams.height - this.radius * 2) {\r\n            this.y = this.y - this.radius;\r\n        }\r\n        else if (this.y < this.radius * 2) {\r\n            this.y = this.y + this.radius;\r\n        }\r\n        if (this._params.particles.move.bounce) {\r\n            this._checkOverlap(this, position);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?=} position\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._checkOverlap = function (p1, position) {\r\n        var _this = this;\r\n        var particles = this._params.particles;\r\n        particles.array.forEach(function (particle) {\r\n            var /** @type {?} */ p2 = particle;\r\n            var /** @type {?} */ dx = p1.x - p2.x;\r\n            var /** @type {?} */ dy = p1.y - p2.y;\r\n            var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n            if (dist <= p1.radius + p2.radius) {\r\n                p1.x = position ? position.x : Math.random() * _this._canvasParams.width;\r\n                p1.y = position ? position.y : Math.random() * _this._canvasParams.height;\r\n                _this._checkOverlap(p1);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?=} color\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupColor = function (color) {\r\n        this.color = getColor(color.value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupOpacity = function () {\r\n        this.opacity = (this._params.particles.opacity.random ? Math.random() : 1) * this._params.particles.opacity.value;\r\n        if (this._params.particles.opacity.anim.enable) {\r\n            this.opacity_status = false;\r\n            this.vo = this._params.particles.opacity.anim.speed / 100;\r\n            if (!this._params.particles.opacity.anim.sync) {\r\n                this.vo = this.vo * Math.random();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupAnimation = function () {\r\n        var /** @type {?} */ velbase = null;\r\n        switch (this._params.particles.move.direction) {\r\n            case 'top':\r\n                velbase = { x: 0, y: -1 };\r\n                break;\r\n            case 'top-right':\r\n                velbase = { x: 0.5, y: -0.5 };\r\n                break;\r\n            case 'right':\r\n                velbase = { x: 1, y: 0 };\r\n                break;\r\n            case 'bottom-right':\r\n                velbase = { x: 0.5, y: 0.5 };\r\n                break;\r\n            case 'bottom':\r\n                velbase = { x: 0, y: 1 };\r\n                break;\r\n            case 'bottom-left':\r\n                velbase = { x: -0.5, y: 1 };\r\n                break;\r\n            case 'left':\r\n                velbase = { x: -1, y: 0 };\r\n                break;\r\n            case 'top-left':\r\n                velbase = { x: -0.5, y: -0.5 };\r\n                break;\r\n            default:\r\n                velbase = { x: 0, y: 0 };\r\n                break;\r\n        }\r\n        if (this._params.particles.move.straight) {\r\n            this.vx = velbase.x;\r\n            this.vy = velbase.y;\r\n            if (this._params.particles.move.random) {\r\n                this.vx = this.vx * (Math.random());\r\n                this.vy = this.vy * (Math.random());\r\n            }\r\n        }\r\n        else {\r\n            this.vx = velbase.x + Math.random() - 0.5;\r\n            this.vy = velbase.y + Math.random() - 0.5;\r\n        }\r\n        this.vx_i = this.vx;\r\n        this.vy_i = this.vy;\r\n        var /** @type {?} */ shape_type = this._params.particles.shape.type;\r\n        if (typeof (shape_type) == 'object') {\r\n            if (shape_type instanceof Array) {\r\n                var /** @type {?} */ shape_selected = shape_type[Math.floor(Math.random() * shape_type.length)];\r\n                this.shape = shape_selected;\r\n            }\r\n        }\r\n        else {\r\n            this.shape = shape_type;\r\n        }\r\n        if (this.shape == 'image') {\r\n            var /** @type {?} */ sh = this._params.particles.shape;\r\n            this.img = {\r\n                src: sh.image.src,\r\n                ratio: sh.image.width / sh.image.height\r\n            };\r\n            if (!this.img.ratio)\r\n                this.img.ratio = 1;\r\n            if (this._tmpParams.img_type == 'svg' && this._tmpParams.source_svg != undefined) {\r\n                createSvgImg(this, this._tmpParams);\r\n                if (this._tmpParams.pushing) {\r\n                    this.img.loaded = false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} c\r\n     * @param {?} startX\r\n     * @param {?} startY\r\n     * @param {?} sideLength\r\n     * @param {?} sideCountNumerator\r\n     * @param {?} sideCountDenominator\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._drawShape = function (c, startX, startY, sideLength, sideCountNumerator, sideCountDenominator) {\r\n        var /** @type {?} */ sideCount = sideCountNumerator * sideCountDenominator;\r\n        var /** @type {?} */ decimalSides = sideCountNumerator / sideCountDenominator;\r\n        var /** @type {?} */ interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\r\n        var /** @type {?} */ interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180;\r\n        c.save();\r\n        c.beginPath();\r\n        c.translate(startX, startY);\r\n        c.moveTo(0, 0);\r\n        for (var /** @type {?} */ i = 0; i < sideCount; i++) {\r\n            c.lineTo(sideLength, 0);\r\n            c.translate(sideLength, 0);\r\n            c.rotate(interiorAngle);\r\n        }\r\n        c.fill();\r\n        c.restore();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype.draw = function () {\r\n        var _this = this;\r\n        var particles = this._params.particles;\r\n        var /** @type {?} */ radius;\r\n        if (this.radius_bubble != undefined) {\r\n            radius = this.radius_bubble;\r\n        }\r\n        else {\r\n            radius = this.radius;\r\n        }\r\n        var /** @type {?} */ opacity;\r\n        if (this.opacity_bubble != undefined) {\r\n            opacity = this.opacity_bubble;\r\n        }\r\n        else {\r\n            opacity = this.opacity;\r\n        }\r\n        var /** @type {?} */ color_value;\r\n        if (this.color.rgb) {\r\n            var _a = this.color.rgb, r = _a.r, g = _a.g, b = _a.b;\r\n            color_value = \"rgba( \" + r + \", \" + g + \", \" + b + \", \" + opacity + \" )\";\r\n        }\r\n        else {\r\n            var _b = this.color.hsl, h = _b.h, s = _b.s, l = _b.l;\r\n            color_value = \"hsla( \" + h + \", \" + s + \", \" + l + \", \" + opacity + \" )\";\r\n        }\r\n        this._canvasParams.ctx.fillStyle = color_value;\r\n        this._canvasParams.ctx.beginPath();\r\n        switch (this.shape) {\r\n            case 'circle':\r\n                this._canvasParams.ctx.arc(this.x, this.y, radius, 0, Math.PI * 2, false);\r\n                break;\r\n            case 'edge':\r\n                this._canvasParams.ctx.rect(this.x - radius, this.y - radius, radius * 2, radius * 2);\r\n                break;\r\n            case 'triangle':\r\n                this._drawShape(this._canvasParams.ctx, this.x - radius, this.y + radius / 1.66, radius * 2, 3, 2);\r\n                break;\r\n            case 'polygon':\r\n                this._drawShape(this._canvasParams.ctx, this.x - radius / (this._params.particles.shape.polygon.nb_sides / 3.5), this.y - radius / (2.66 / 3.5), radius * 2.66 / (this._params.particles.shape.polygon.nb_sides / 3), this._params.particles.shape.polygon.nb_sides, 1);\r\n                break;\r\n            case 'star':\r\n                this._drawShape(this._canvasParams.ctx, this.x - radius * 2 / (this._params.particles.shape.polygon.nb_sides / 4), this.y - radius / (2 * 2.66 / 3.5), radius * 2 * 2.66 / (this._params.particles.shape.polygon.nb_sides / 3), this._params.particles.shape.polygon.nb_sides, 2);\r\n                break;\r\n            case 'image':\r\n                var /** @type {?} */ draw = function (img_obj) {\r\n                    _this._canvasParams.ctx.drawImage(img_obj, _this.x - radius, _this.y - radius, radius * 2, radius * 2 / _this.img.ratio);\r\n                };\r\n                var /** @type {?} */ img_obj = void 0;\r\n                if (this._tmpParams.img_type == 'svg') {\r\n                    img_obj = this.img.obj;\r\n                }\r\n                else {\r\n                    img_obj = this._tmpParams.img_obj;\r\n                }\r\n                if (img_obj)\r\n                    draw(img_obj);\r\n                break;\r\n        }\r\n        this._canvasParams.ctx.closePath();\r\n        if (this._params.particles.shape.stroke.width > 0) {\r\n            this._canvasParams.ctx.strokeStyle = this._params.particles.shape.stroke.color;\r\n            this._canvasParams.ctx.lineWidth = this._params.particles.shape.stroke.width;\r\n            this._canvasParams.ctx.stroke();\r\n        }\r\n        this._canvasParams.ctx.fill();\r\n    };\r\n    return Particle$$1;\r\n}());\n\nvar ParticleInteraction = (function () {\r\n    function ParticleInteraction() {\r\n    }\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?} p2\r\n     * @param {?} params\r\n     * @param {?} canvasParams\r\n     * @return {?}\r\n     */\r\n    ParticleInteraction.prototype.linkParticles = function (p1, p2, params, canvasParams) {\r\n        var /** @type {?} */ dx = p1.x - p2.x;\r\n        var /** @type {?} */ dy = p1.y - p2.y;\r\n        var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n        var line_linked = params.particles.line_linked;\r\n        if (dist <= params.particles.line_linked.distance) {\r\n            var /** @type {?} */ opacity_line = params.particles.line_linked.opacity - (dist / (1 / params.particles.line_linked.opacity)) / params.particles.line_linked.distance;\r\n            if (opacity_line > 0) {\r\n                var /** @type {?} */ color_line = params.particles.line_linked.color_rgb_line;\r\n                var r = color_line.r, g = color_line.g, b = color_line.b;\r\n                canvasParams.ctx.save();\r\n                canvasParams.ctx.strokeStyle = \"rgba( \" + r + \", \" + g + \", \" + b + \", \" + opacity_line + \" )\";\r\n                canvasParams.ctx.lineWidth = params.particles.line_linked.width;\r\n                canvasParams.ctx.beginPath();\r\n                if (line_linked.shadow.enable) {\r\n                    canvasParams.ctx.shadowBlur = line_linked.shadow.blur;\r\n                    canvasParams.ctx.shadowColor = line_linked.shadow.color;\r\n                }\r\n                canvasParams.ctx.moveTo(p1.x, p1.y);\r\n                canvasParams.ctx.lineTo(p2.x, p2.y);\r\n                canvasParams.ctx.stroke();\r\n                canvasParams.ctx.closePath();\r\n                canvasParams.ctx.restore();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?} p2\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    ParticleInteraction.prototype.attractParticles = function (p1, p2, params) {\r\n        var /** @type {?} */ dx = p1.x - p2.x;\r\n        var /** @type {?} */ dy = p1.y - p2.y;\r\n        var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n        if (dist <= params.particles.line_linked.distance) {\r\n            var /** @type {?} */ ax = dx / (params.particles.move.attract.rotateX * 1000);\r\n            var /** @type {?} */ ay = dy / (params.particles.move.attract.rotateY * 1000);\r\n            p1.vx -= ax;\r\n            p1.vy -= ay;\r\n            p2.vx += ax;\r\n            p2.vy += ay;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?} p2\r\n     * @return {?}\r\n     */\r\n    ParticleInteraction.prototype.bounceParticles = function (p1, p2) {\r\n        var /** @type {?} */ dx = p1.x - p2.x;\r\n        var /** @type {?} */ dy = p1.y - p2.y;\r\n        var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n        var /** @type {?} */ dist_p = p1.radius + p2.radius;\r\n        if (dist <= dist_p) {\r\n            p1.vx = -p1.vx;\r\n            p1.vy = -p1.vy;\r\n            p2.vx = -p2.vx;\r\n            p2.vy = -p2.vy;\r\n        }\r\n    };\r\n    return ParticleInteraction;\r\n}());\n\nvar ParticlesDirective = (function () {\r\n    /**\r\n     * @param {?} el\r\n     */\r\n    function ParticlesDirective(el) {\r\n        this.el = el;\r\n        this._tmpParams = {};\r\n    }\r\n    Object.defineProperty(ParticlesDirective.prototype, \"params\", {\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        set: function (value) {\r\n            var /** @type {?} */ defaultParams = getDefaultParams();\r\n            this._params = deepExtend(defaultParams, value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.ngAfterViewInit = function () {\r\n        this._canvasParams = {\r\n            el: this.el.nativeElement,\r\n            ctx: this.el.nativeElement.getContext('2d'),\r\n            width: this.el.nativeElement.offsetWidth,\r\n            height: this.el.nativeElement.offsetHeight\r\n        };\r\n        this._tmpParams.obj = {\r\n            size_value: this._params.particles.size.value,\r\n            size_anim_speed: this._params.particles.size.anim.speed,\r\n            move_speed: this._params.particles.move.speed,\r\n            line_linked_distance: this._params.particles.line_linked.distance,\r\n            line_linked_width: this._params.particles.line_linked.width,\r\n            mode_grab_distance: this._params.interactivity.modes.grab.distance,\r\n            mode_bubble_distance: this._params.interactivity.modes.bubble.distance,\r\n            mode_bubble_size: this._params.interactivity.modes.bubble.size,\r\n            mode_repulse_distance: this._params.interactivity.modes.repulse.distance\r\n        };\r\n        this._params.interactivity.el = (this._params.interactivity.detect_on == 'window') ? window : this._canvasParams.el;\r\n        if (isInArray('image', this._params.particles.shape.type)) {\r\n            this._tmpParams.img_type = this._params.particles.shape.image.src.substr(this._params.particles.shape.image.src.length - 3);\r\n            loadImg(this._params, this._tmpParams);\r\n        }\r\n        this._canvasManager = new CanvasManager$$1(this._canvasParams, this._params, this._tmpParams);\r\n        this._canvasManager.draw();\r\n    };\r\n    /**\r\n     * Mouse move event\r\n    \\@param event\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.onMouseMove = function (event) {\r\n        var interactivity = this._params.interactivity;\r\n        if (interactivity.events.onhover.enable ||\r\n            interactivity.events.onclick.enable) {\r\n            var /** @type {?} */ pos = void 0;\r\n            if (interactivity.el == window) {\r\n                pos = {\r\n                    x: event.clientX,\r\n                    y: event.clientY\r\n                };\r\n            }\r\n            else {\r\n                pos = {\r\n                    x: event.offsetX || event.clientX,\r\n                    y: event.offsetY || event.clientY\r\n                };\r\n            }\r\n            interactivity.mouse.pos_x = pos.x;\r\n            interactivity.mouse.pos_y = pos.y;\r\n            if (this._tmpParams.retina) {\r\n                interactivity.mouse.pos_x *= this._canvasParams.pxratio;\r\n                interactivity.mouse.pos_y *= this._canvasParams.pxratio;\r\n            }\r\n            interactivity.status = 'mousemove';\r\n        }\r\n    };\r\n    /**\r\n     * Mouse leave event\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.onMouseLeave = function () {\r\n        var interactivity = this._params.interactivity;\r\n        if (interactivity.events.onhover.enable ||\r\n            interactivity.events.onclick.enable) {\r\n            interactivity.mouse.pos_x = null;\r\n            interactivity.mouse.pos_y = null;\r\n            interactivity.status = 'mouseleave';\r\n        }\r\n    };\r\n    /**\r\n     * Click event\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.onClick = function () {\r\n        var _this = this;\r\n        var _a = this._params, interactivity = _a.interactivity, particles = _a.particles;\r\n        if (interactivity.events.onclick.enable) {\r\n            interactivity.mouse.click_pos_x = interactivity.mouse.pos_x;\r\n            interactivity.mouse.click_pos_y = interactivity.mouse.pos_y;\r\n            interactivity.mouse.click_time = new Date().getTime();\r\n            switch (interactivity.events.onclick.mode) {\r\n                case 'push':\r\n                    if (particles.move.enable) {\r\n                        this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb, interactivity.mouse);\r\n                    }\r\n                    else {\r\n                        if (interactivity.modes.push.particles_nb == 1) {\r\n                            this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb, interactivity.mouse);\r\n                        }\r\n                        else if (interactivity.modes.push.particles_nb > 1) {\r\n                            this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'remove':\r\n                    this._canvasManager.particlesManager.removeParticles(interactivity.modes.remove.particles_nb);\r\n                    break;\r\n                case 'bubble':\r\n                    this._tmpParams.bubble_clicking = true;\r\n                    break;\r\n                case 'repulse':\r\n                    this._tmpParams.repulse_clicking = true;\r\n                    this._tmpParams.repulse_count = 0;\r\n                    this._tmpParams.repulse_finish = false;\r\n                    setTimeout(function () {\r\n                        _this._tmpParams.repulse_clicking = false;\r\n                    }, interactivity.modes.repulse.duration * 1000);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return ParticlesDirective;\r\n}());\r\nParticlesDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[d-particles]'\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nParticlesDirective.ctorParameters = function () { return [\r\n    { type: ElementRef, },\r\n]; };\r\nParticlesDirective.propDecorators = {\r\n    'params': [{ type: Input },],\r\n    'onMouseMove': [{ type: HostListener, args: ['mousemove', ['$event'],] },],\r\n    'onMouseLeave': [{ type: HostListener, args: ['mouseleave',] },],\r\n    'onClick': [{ type: HostListener, args: ['click',] },],\r\n};\n\nvar ParticlesModule = (function () {\r\n    function ParticlesModule() {\r\n    }\r\n    return ParticlesModule;\r\n}());\r\nParticlesModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [\r\n                    CommonModule\r\n                ],\r\n                declarations: [\r\n                    ParticlesComponent,\r\n                    ParticlesDirective\r\n                ],\r\n                exports: [\r\n                    ParticlesComponent,\r\n                    ParticlesDirective\r\n                ]\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nParticlesModule.ctorParameters = function () { return []; };\n\nexport { ParticlesModule, ParticlesComponent, ParticlesDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/macbookair/Documents/andres/frontend/node_modules/angular-particle/index.js\n// module id = ../../../../angular-particle/index.js\n// module chunks = login.module"],"sourceRoot":"webpack:///"}